{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\react-test\\\\src\\\\components\\\\BlogPost.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BlogPost() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [blogName, setBlogName] = useState(\"\");\n  const [blogDescription, setBlogDescription] = useState(\"\");\n  const [blogPublished, setBlogPublished] = useState(\"\");\n  const [blogImg, setBlogImg] = useState(null);\n  const fetchBlog = () => {\n    fetch('http://localhost:1337/api/blogs/' + id + '?populate=*', {\n      method: 'GET'\n    }).then(response => response.json()).then(res => {\n      if (res.data) {\n        let blogData = res.data.attributes;\n        setBlogName(blogData.name);\n        setBlogDescription(blogData.description);\n        setBlogPublished(blogData.published);\n        var imageURL = null;\n        var imageId = null;\n        if (blogData.image.data && blogData.image.data !== null) {\n          imageURL = blogData.image.data.attributes.url;\n          imageId = blogData.image.data.id;\n          setIsImage(true);\n        }\n        setBlogImg(imageURL);\n        setBlogImgId(imageId);\n        setIsLoading(false);\n      }\n    }).catch(error => {\n      console.log(error);\n      setIsLoading(false);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"BlogPost\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n_s(BlogPost, \"GL8EbRFFED7l33YVeCYG4oXo94E=\", false, function () {\n  return [useParams];\n});\n_c = BlogPost;\nvar _c;\n$RefreshReg$(_c, \"BlogPost\");","map":{"version":3,"names":["React","useState","useParams","jsxDEV","_jsxDEV","BlogPost","_s","id","blogName","setBlogName","blogDescription","setBlogDescription","blogPublished","setBlogPublished","blogImg","setBlogImg","fetchBlog","fetch","method","then","response","json","res","data","blogData","attributes","name","description","published","imageURL","imageId","image","url","setIsImage","setBlogImgId","setIsLoading","catch","error","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/React/react-test/src/components/BlogPost.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nexport default function BlogPost() {\r\n    const {id} = useParams();\r\n    const [blogName, setBlogName] = useState(\"\");\r\n    const [blogDescription, setBlogDescription] = useState(\"\");\r\n    const [blogPublished, setBlogPublished] = useState(\"\");\r\n    const [blogImg, setBlogImg] = useState(null);\r\n    \r\n    const fetchBlog = () => {\r\n        fetch('http://localhost:1337/api/blogs/'+id+'?populate=*',{\r\n            method : 'GET'\r\n        })\r\n        .then(response => response.json())\r\n        .then((res) => {\r\n            if(res.data){\r\n                let blogData = res.data.attributes;\r\n                setBlogName(blogData.name);\r\n                setBlogDescription(blogData.description);\r\n                setBlogPublished(blogData.published);\r\n\r\n                var imageURL = null;\r\n                var imageId = null;\r\n                if(blogData.image.data && blogData.image.data !== null){\r\n                    imageURL = blogData.image.data.attributes.url;\r\n                    imageId = blogData.image.data.id;\r\n                    setIsImage(true);\r\n                }\r\n                setBlogImg(imageURL);\r\n                setBlogImgId(imageId);\r\n\r\n                setIsLoading(false);\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n            setIsLoading(false);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>BlogPost</div>\r\n    )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5C,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM;IAACC;EAAE,CAAC,GAAGL,SAAS,CAAC,CAAC;EACxB,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMe,SAAS,GAAGA,CAAA,KAAM;IACpBC,KAAK,CAAC,kCAAkC,GAACV,EAAE,GAAC,aAAa,EAAC;MACtDW,MAAM,EAAG;IACb,CAAC,CAAC,CACDC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAAEG,GAAG,IAAK;MACX,IAAGA,GAAG,CAACC,IAAI,EAAC;QACR,IAAIC,QAAQ,GAAGF,GAAG,CAACC,IAAI,CAACE,UAAU;QAClChB,WAAW,CAACe,QAAQ,CAACE,IAAI,CAAC;QAC1Bf,kBAAkB,CAACa,QAAQ,CAACG,WAAW,CAAC;QACxCd,gBAAgB,CAACW,QAAQ,CAACI,SAAS,CAAC;QAEpC,IAAIC,QAAQ,GAAG,IAAI;QACnB,IAAIC,OAAO,GAAG,IAAI;QAClB,IAAGN,QAAQ,CAACO,KAAK,CAACR,IAAI,IAAIC,QAAQ,CAACO,KAAK,CAACR,IAAI,KAAK,IAAI,EAAC;UACnDM,QAAQ,GAAGL,QAAQ,CAACO,KAAK,CAACR,IAAI,CAACE,UAAU,CAACO,GAAG;UAC7CF,OAAO,GAAGN,QAAQ,CAACO,KAAK,CAACR,IAAI,CAAChB,EAAE;UAChC0B,UAAU,CAAC,IAAI,CAAC;QACpB;QACAlB,UAAU,CAACc,QAAQ,CAAC;QACpBK,YAAY,CAACJ,OAAO,CAAC;QAErBK,YAAY,CAAC,KAAK,CAAC;MACvB;IACJ,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClBF,YAAY,CAAC,KAAK,CAAC;IACvB,CAAC,CAAC;EACN,CAAC;EAED,oBACI/B,OAAA;IAAAoC,QAAA,EAAK;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAE3B;AAACtC,EAAA,CAzCuBD,QAAQ;EAAA,QACfH,SAAS;AAAA;AAAA2C,EAAA,GADFxC,QAAQ;AAAA,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}