{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\react-test\\\\src\\\\components\\\\admin\\\\Login.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport { Button, Col, Container, Form, Row } from 'react-bootstrap';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst config = require(\"../Config.json\");\nexport default function Login() {\n  _s();\n  const [identifier, setIdentifier] = useState('');\n  const [password, setPassword] = useState('');\n  var login = e => {\n    e.preventDefault();\n    if (identifier == '') {\n      toast.error(\"Email is required\");\n    } else if (password == '') {\n      toast.error(\"Password is required\");\n    } else {\n      try {\n        axios.post(`${config.baseURL}/api/auth/local`, {\n          identifier: identifier,\n          password: password\n        }).then(response => {\n          // console.log('User profile', response.data.user);\n          localStorage.setItem('id', response.data.user.id);\n          localStorage.setItem('email', response.data.user.email);\n          localStorage.setItem('token', response.data.jwt);\n          localStorage.setItem('isLoggedIn', 'true');\n          window.location.href = \"/dashboard\";\n        }).catch(error => {\n          if (error.response && error.response.data.error.name == 'ValidationError') {\n            var message = \"Invalid login credentials.\";\n          } else {\n            var message = \"Login failed. Please try again letter.\";\n          }\n          toast.error(message);\n          return false;\n        });\n      } catch (error) {\n        toast.error(error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      xs: 12,\n      md: {\n        span: 6,\n        offset: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-center\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter email\",\n            name: \"email\",\n            value: identifier,\n            onChange: e => {\n              setIdentifier(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Password\",\n            name: \"password\",\n            value: password,\n            onChange: e => {\n              setPassword(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"btn btn-info text-white\",\n          type: \"submit\",\n          onClick: e => {\n            login(e);\n          },\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Login, \"4QYh9Cf69aLCxThaTPqr845mr1c=\");\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["axios","React","useState","Button","Col","Container","Form","Row","ToastContainer","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","config","require","Login","_s","identifier","setIdentifier","password","setPassword","login","e","preventDefault","error","post","baseURL","then","response","localStorage","setItem","data","user","id","email","jwt","window","location","href","catch","name","message","children","xs","md","span","offset","className","fileName","_jsxFileName","lineNumber","columnNumber","Group","controlId","Label","Control","type","placeholder","value","onChange","target","onClick","_c","$RefreshReg$"],"sources":["E:/React/react-test/src/components/admin/Login.js"],"sourcesContent":["import axios from 'axios';\r\nimport React, { useState } from 'react'\r\nimport { Button, Col, Container, Form, Row } from 'react-bootstrap'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nconst config = require(\"../Config.json\");\r\n\r\nexport default function Login() {\r\n\r\n    const [identifier, setIdentifier] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    var login = (e) => {\r\n        e.preventDefault();\r\n        if(identifier == ''){\r\n            toast.error(\"Email is required\");\r\n        }\r\n        else if(password == ''){\r\n            toast.error(\"Password is required\");\r\n        }\r\n        else{\r\n            try{\r\n                axios.post(`${config.baseURL}/api/auth/local`, {\r\n                    identifier: identifier,\r\n                    password: password,\r\n                })\r\n                .then(response => {\r\n                    // console.log('User profile', response.data.user);\r\n                    localStorage.setItem('id', response.data.user.id);\r\n                    localStorage.setItem('email', response.data.user.email);\r\n                    localStorage.setItem('token', response.data.jwt);\r\n                    localStorage.setItem('isLoggedIn', 'true');\r\n                    window.location.href = \"/dashboard\";\r\n                })\r\n                .catch(error => {\r\n                    if(error.response && error.response.data.error.name == 'ValidationError'){\r\n                        var message = \"Invalid login credentials.\";\r\n                    }\r\n                    else{\r\n                        var message = \"Login failed. Please try again letter.\";\r\n                    }\r\n                    toast.error(message);\r\n                    return false;\r\n                });\r\n            }\r\n            catch(error){\r\n                toast.error(error);\r\n            }            \r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Col xs={12} md={{ span: 6, offset: 3 }}>\r\n                <h3 className=\"text-center\">Login</h3>\r\n                <Form>\r\n                    <Form.Group className=\"mb-3\" controlId=\"email\">\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter email\" name=\"email\" value={identifier} onChange={(e)=>{setIdentifier(e.target.value)}} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"password\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type=\"password\" placeholder=\"Password\" name=\"password\" value={password} onChange={(e)=>{setPassword(e.target.value)}} />\r\n                    </Form.Group>\r\n                \r\n                    <Button className=\"btn btn-info text-white\" type=\"submit\" onClick={(e)=>{login(e)}}>Login</Button>\r\n                </Form>\r\n            </Col>\r\n            <ToastContainer />\r\n        </>\r\n    )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}