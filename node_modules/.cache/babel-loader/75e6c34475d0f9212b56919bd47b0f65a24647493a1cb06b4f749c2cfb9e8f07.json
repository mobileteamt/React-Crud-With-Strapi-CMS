{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\react-test\\\\src\\\\components\\\\BlogPost.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport config from './Config.json';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar API_BASE_URL = config.API_BASE_URL;\nexport default function BlogPost() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [blogName, setBlogName] = useState(\"\");\n  const [blogDescription, setBlogDescription] = useState(\"\");\n  const [blogPublished, setBlogPublished] = useState(\"\");\n  const [blogImg, setBlogImg] = useState(null);\n  const [isBlog, setIsBlog] = useState(false);\n  const fetchBlog = () => {\n    fetch(API_BASE_URL + '/api/blogs/' + id + '?populate=*', {\n      method: 'GET'\n    }).then(response => response.json()).then(res => {\n      if (res.data) {\n        setIsBlog(true);\n        let blogData = res.data.attributes;\n        // console.log(blogData);\n        setBlogName(blogData.name);\n        setBlogDescription(blogData.description);\n        setBlogPublished(blogData.publishedAt);\n        var imageURL = null;\n        if (blogData.image.data && blogData.image.data !== null) {\n          imageURL = blogData.image.data.attributes.url;\n        }\n        setBlogImg(imageURL);\n      }\n    }).catch(error => {\n      console.log(error);\n      setIsBlog(false);\n    });\n  };\n  useEffect(() => {\n    fetchBlog();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isBlog ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://localhost:1337${blogImg}`,\n        className: \"card-img-top\",\n        alt: \"...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-title\",\n          children: blogName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"text-body-secondary\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Published:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 89\n            }, this), \" \", blogPublished]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: blogDescription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this) : 'No blog post available.'\n  }, void 0, false);\n}\n_s(BlogPost, \"I2xSwGL75hqER/lu/Ay8WF4W7Cc=\", false, function () {\n  return [useParams];\n});\n_c = BlogPost;\nvar _c;\n$RefreshReg$(_c, \"BlogPost\");","map":{"version":3,"names":["React","useEffect","useState","useParams","config","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE_URL","BlogPost","_s","id","blogName","setBlogName","blogDescription","setBlogDescription","blogPublished","setBlogPublished","blogImg","setBlogImg","isBlog","setIsBlog","fetchBlog","fetch","method","then","response","json","res","data","blogData","attributes","name","description","publishedAt","imageURL","image","url","catch","error","console","log","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/React/react-test/src/components/BlogPost.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport config from './Config.json'\r\nvar API_BASE_URL = config.API_BASE_URL;\r\n\r\nexport default function BlogPost() {\r\n    const {id} = useParams();\r\n    const [blogName, setBlogName] = useState(\"\");\r\n    const [blogDescription, setBlogDescription] = useState(\"\");\r\n    const [blogPublished, setBlogPublished] = useState(\"\");\r\n    const [blogImg, setBlogImg] = useState(null);\r\n    const [isBlog, setIsBlog] = useState(false);\r\n    \r\n    const fetchBlog = () => {\r\n        fetch(API_BASE_URL+'/api/blogs/'+id+'?populate=*',{\r\n            method : 'GET'\r\n        })\r\n        .then(response => response.json())\r\n        .then((res) => {\r\n            if(res.data){\r\n                setIsBlog(true);\r\n                let blogData = res.data.attributes;\r\n                // console.log(blogData);\r\n                setBlogName(blogData.name);\r\n                setBlogDescription(blogData.description);\r\n                setBlogPublished(blogData.publishedAt);\r\n\r\n                var imageURL = null;\r\n                if(blogData.image.data && blogData.image.data !== null){\r\n                    imageURL = blogData.image.data.attributes.url;\r\n                }\r\n                setBlogImg(imageURL);\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n            setIsBlog(false);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchBlog();\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            {isBlog ? (\r\n                <div className=\"card mb-3\">\r\n                    <img src={`http://localhost:1337${blogImg}`} className=\"card-img-top\" alt=\"...\"/>\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">{blogName}</h5>\r\n                        <p className=\"card-text\"><small className=\"text-body-secondary\"><strong>Published:</strong> {blogPublished}</small></p>\r\n                        <p className=\"card-text\">{blogDescription}</p>         \r\n                    </div>\r\n                </div>\r\n            ) : ('No blog post available.')}\r\n        </>\r\n    )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}