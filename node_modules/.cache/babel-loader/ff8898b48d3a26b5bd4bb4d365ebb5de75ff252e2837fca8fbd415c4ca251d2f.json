{"ast":null,"code":"import { useEffect } from 'react';\nimport config from './Config.json';\nimport axios from 'axios';\nvar uploadResponse;\nexport function upload(token = null, image_data = null) {\n  if (image_data !== null && token !== null) {\n    async function postData(url = \"\", data) {\n      var uploadResult = await axios({\n        method: 'POST',\n        url: 'http://localhost:1337/api/upload',\n        headers: {\n          'accept': 'application/json',\n          'content-type': 'multipart/form-data',\n          \"Authorization\": `Bearer ${token}`\n        },\n        data: data,\n        onUploadProgress: progress => {\n          // console.log(\"FileUpload \", progress);\n        }\n      });\n      // console.log(uploadResult);\n      return uploadResult;\n    }\n    let formData = new FormData();\n    formData.append('files', image_data);\n    postData(`${config.baseURL}/api/upload`, formData).then(response => {\n      if (response.data && response.data !== undefined) {\n        console.log(response.data[0]);\n        uploadResponse = response.data[0];\n      }\n    });\n  }\n  // console.log('uploadResponse: '+uploadResponse);\n  return uploadResponse;\n}","map":{"version":3,"names":["useEffect","config","axios","uploadResponse","upload","token","image_data","postData","url","data","uploadResult","method","headers","onUploadProgress","progress","formData","FormData","append","baseURL","then","response","undefined","console","log"],"sources":["E:/React/react-test/src/components/admin/UploadImage.js"],"sourcesContent":["\r\nimport { useEffect } from 'react';\r\nimport config from './Config.json';\r\nimport axios from 'axios';\r\nvar uploadResponse;\r\n\r\nexport function upload(token = null, image_data = null) {\r\n\r\n    \r\n\r\n    if(image_data !== null && token !== null){\r\n        async function postData(url = \"\", data) {\r\n        \r\n            var uploadResult = await axios({\r\n                method: 'POST',\r\n                url:'http://localhost:1337/api/upload',\r\n                headers: { \r\n                    'accept' : 'application/json',\r\n                    'content-type': 'multipart/form-data',\r\n                    \"Authorization\":`Bearer ${token}`\r\n                },\r\n                data: data,\r\n                onUploadProgress:(progress)=>{ \r\n                    // console.log(\"FileUpload \", progress);\r\n                }\r\n            });\r\n            // console.log(uploadResult);\r\n            return uploadResult;\r\n        }\r\n        \r\n        let formData = new FormData();\r\n        formData.append('files',image_data);\r\n\r\n        postData(`${config.baseURL}/api/upload`, formData).then((response) => {\r\n            \r\n            if(response.data && response.data !== undefined){\r\n                console.log(response.data[0]);\r\n                uploadResponse = response.data[0];\r\n            }\r\n        });\r\n\r\n    }\r\n    // console.log('uploadResponse: '+uploadResponse);\r\n    return uploadResponse;\r\n}"],"mappings":"AACA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,MAAM,MAAM,eAAe;AAClC,OAAOC,KAAK,MAAM,OAAO;AACzB,IAAIC,cAAc;AAElB,OAAO,SAASC,MAAMA,CAACC,KAAK,GAAG,IAAI,EAAEC,UAAU,GAAG,IAAI,EAAE;EAIpD,IAAGA,UAAU,KAAK,IAAI,IAAID,KAAK,KAAK,IAAI,EAAC;IACrC,eAAeE,QAAQA,CAACC,GAAG,GAAG,EAAE,EAAEC,IAAI,EAAE;MAEpC,IAAIC,YAAY,GAAG,MAAMR,KAAK,CAAC;QAC3BS,MAAM,EAAE,MAAM;QACdH,GAAG,EAAC,kCAAkC;QACtCI,OAAO,EAAE;UACL,QAAQ,EAAG,kBAAkB;UAC7B,cAAc,EAAE,qBAAqB;UACrC,eAAe,EAAE,UAASP,KAAM;QACpC,CAAC;QACDI,IAAI,EAAEA,IAAI;QACVI,gBAAgB,EAAEC,QAAQ,IAAG;UACzB;QAAA;MAER,CAAC,CAAC;MACF;MACA,OAAOJ,YAAY;IACvB;IAEA,IAAIK,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC7BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAACX,UAAU,CAAC;IAEnCC,QAAQ,CAAE,GAAEN,MAAM,CAACiB,OAAQ,aAAY,EAAEH,QAAQ,CAAC,CAACI,IAAI,CAAEC,QAAQ,IAAK;MAElE,IAAGA,QAAQ,CAACX,IAAI,IAAIW,QAAQ,CAACX,IAAI,KAAKY,SAAS,EAAC;QAC5CC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACX,IAAI,CAAC,CAAC,CAAC,CAAC;QAC7BN,cAAc,GAAGiB,QAAQ,CAACX,IAAI,CAAC,CAAC,CAAC;MACrC;IACJ,CAAC,CAAC;EAEN;EACA;EACA,OAAON,cAAc;AACzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}