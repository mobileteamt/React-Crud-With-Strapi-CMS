{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\react-test\\\\src\\\\components\\\\BlogPost.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function BlogPost() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [blogName, setBlogName] = useState(\"\");\n  const [blogDescription, setBlogDescription] = useState(\"\");\n  const [blogPublished, setBlogPublished] = useState(\"\");\n  const [blogImg, setBlogImg] = useState(null);\n  const fetchBlog = () => {\n    fetch('http://localhost:1337/api/blogs/' + id + '?populate=*', {\n      method: 'GET'\n    }).then(response => response.json()).then(res => {\n      if (res.data) {\n        let blogData = res.data.attributes;\n        console.log(blogData);\n        setBlogName(blogData.name);\n        setBlogDescription(blogData.description);\n        setBlogPublished(blogData.publishedAt);\n        var imageURL = null;\n        if (blogData.image.data && blogData.image.data !== null) {\n          imageURL = blogData.image.data.attributes.url;\n        }\n        setBlogImg(imageURL);\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  useEffect(() => {\n    fetchBlog();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: blogName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: blogImg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: blogPublished\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: blogDescription\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(BlogPost, \"yeoN83gsGdX+KmhpABGh00vwSsI=\", false, function () {\n  return [useParams];\n});\n_c = BlogPost;\nvar _c;\n$RefreshReg$(_c, \"BlogPost\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","BlogPost","_s","id","blogName","setBlogName","blogDescription","setBlogDescription","blogPublished","setBlogPublished","blogImg","setBlogImg","fetchBlog","fetch","method","then","response","json","res","data","blogData","attributes","console","log","name","description","publishedAt","imageURL","image","url","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/React/react-test/src/components/BlogPost.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nexport default function BlogPost() {\r\n    const {id} = useParams();\r\n    const [blogName, setBlogName] = useState(\"\");\r\n    const [blogDescription, setBlogDescription] = useState(\"\");\r\n    const [blogPublished, setBlogPublished] = useState(\"\");\r\n    const [blogImg, setBlogImg] = useState(null);\r\n    \r\n    const fetchBlog = () => {\r\n        fetch('http://localhost:1337/api/blogs/'+id+'?populate=*',{\r\n            method : 'GET'\r\n        })\r\n        .then(response => response.json())\r\n        .then((res) => {\r\n            if(res.data){\r\n                let blogData = res.data.attributes;\r\n                console.log(blogData);\r\n                setBlogName(blogData.name);\r\n                setBlogDescription(blogData.description);\r\n                setBlogPublished(blogData.publishedAt);\r\n\r\n                var imageURL = null;\r\n                if(blogData.image.data && blogData.image.data !== null){\r\n                    imageURL = blogData.image.data.attributes.url;\r\n                }\r\n                setBlogImg(imageURL);\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchBlog();\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <h2>{blogName}</h2>\r\n            <p>{blogImg}</p>\r\n            <p>{blogPublished}</p>\r\n            <p>{blogDescription}</p>\r\n        </>\r\n    )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE5C,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM;IAACC;EAAE,CAAC,GAAGP,SAAS,CAAC,CAAC;EACxB,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMiB,SAAS,GAAGA,CAAA,KAAM;IACpBC,KAAK,CAAC,kCAAkC,GAACV,EAAE,GAAC,aAAa,EAAC;MACtDW,MAAM,EAAG;IACb,CAAC,CAAC,CACDC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAAEG,GAAG,IAAK;MACX,IAAGA,GAAG,CAACC,IAAI,EAAC;QACR,IAAIC,QAAQ,GAAGF,GAAG,CAACC,IAAI,CAACE,UAAU;QAClCC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;QACrBf,WAAW,CAACe,QAAQ,CAACI,IAAI,CAAC;QAC1BjB,kBAAkB,CAACa,QAAQ,CAACK,WAAW,CAAC;QACxChB,gBAAgB,CAACW,QAAQ,CAACM,WAAW,CAAC;QAEtC,IAAIC,QAAQ,GAAG,IAAI;QACnB,IAAGP,QAAQ,CAACQ,KAAK,CAACT,IAAI,IAAIC,QAAQ,CAACQ,KAAK,CAACT,IAAI,KAAK,IAAI,EAAC;UACnDQ,QAAQ,GAAGP,QAAQ,CAACQ,KAAK,CAACT,IAAI,CAACE,UAAU,CAACQ,GAAG;QACjD;QACAlB,UAAU,CAACgB,QAAQ,CAAC;MACxB;IACJ,CAAC,CAAC,CACDG,KAAK,CAAEC,KAAK,IAAK;MACdT,OAAO,CAACC,GAAG,CAACQ,KAAK,CAAC;IACtB,CAAC,CAAC;EACN,CAAC;EAEDrC,SAAS,CAAC,MAAM;IACZkB,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACId,OAAA,CAAAE,SAAA;IAAAgC,QAAA,gBACIlC,OAAA;MAAAkC,QAAA,EAAK5B;IAAQ;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACnBtC,OAAA;MAAAkC,QAAA,EAAItB;IAAO;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChBtC,OAAA;MAAAkC,QAAA,EAAIxB;IAAa;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBtC,OAAA;MAAAkC,QAAA,EAAI1B;IAAe;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA,eAC1B,CAAC;AAEX;AAAClC,EAAA,CA5CuBD,QAAQ;EAAA,QACfL,SAAS;AAAA;AAAAyC,EAAA,GADFpC,QAAQ;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}